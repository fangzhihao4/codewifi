/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.generated.Codewifi;
import org.jooq.generated.Indexes;
import org.jooq.generated.Keys;
import org.jooq.generated.tables.records.UserRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 用户登录信息表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class User extends TableImpl<UserRecord> {

    private static final long serialVersionUID = -981270101;

    /**
     * The reference instance of <code>codewifi.user</code>
     */
    public static final User USER = new User();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserRecord> getRecordType() {
        return UserRecord.class;
    }

    /**
     * The column <code>codewifi.user.id</code>.
     */
    public final TableField<UserRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>codewifi.user.openid</code>. openid
     */
    public final TableField<UserRecord, String> OPENID = createField(DSL.name("openid"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "openid");

    /**
     * The column <code>codewifi.user.user_no</code>.
     */
    public final TableField<UserRecord, String> USER_NO = createField(DSL.name("user_no"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>codewifi.user.type</code>. 1账号密码  2微信 3抖音
     */
    public final TableField<UserRecord, Byte> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "1账号密码  2微信 3抖音");

    /**
     * The column <code>codewifi.user.unionid</code>. unionid
     */
    public final TableField<UserRecord, String> UNIONID = createField(DSL.name("unionid"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "unionid");

    /**
     * The column <code>codewifi.user.nickname</code>. 昵称
     */
    public final TableField<UserRecord, String> NICKNAME = createField(DSL.name("nickname"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "昵称");

    /**
     * The column <code>codewifi.user.head_img_url</code>. 头像
     */
    public final TableField<UserRecord, String> HEAD_IMG_URL = createField(DSL.name("head_img_url"), org.jooq.impl.SQLDataType.VARCHAR(1000).nullable(false), this, "头像");

    /**
     * The column <code>codewifi.user.gender</code>. 性别
     */
    public final TableField<UserRecord, String> GENDER = createField(DSL.name("gender"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "性别");

    /**
     * The column <code>codewifi.user.region</code>. 地区
     */
    public final TableField<UserRecord, String> REGION = createField(DSL.name("region"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "地区");

    /**
     * The column <code>codewifi.user.create_time</code>. 创建时间
     */
    public final TableField<UserRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "创建时间");

    /**
     * The column <code>codewifi.user.update_time</code>. 更新时间
     */
    public final TableField<UserRecord, LocalDateTime> UPDATE_TIME = createField(DSL.name("update_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "更新时间");

    /**
     * The column <code>codewifi.user.status</code>. 1使用中 2已删除
     */
    public final TableField<UserRecord, Byte> STATUS = createField(DSL.name("status"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "1使用中 2已删除");

    /**
     * Create a <code>codewifi.user</code> table reference
     */
    public User() {
        this(DSL.name("user"), null);
    }

    /**
     * Create an aliased <code>codewifi.user</code> table reference
     */
    public User(String alias) {
        this(DSL.name(alias), USER);
    }

    /**
     * Create an aliased <code>codewifi.user</code> table reference
     */
    public User(Name alias) {
        this(alias, USER);
    }

    private User(Name alias, Table<UserRecord> aliased) {
        this(alias, aliased, null);
    }

    private User(Name alias, Table<UserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("用户登录信息表"), TableOptions.table());
    }

    public <O extends Record> User(Table<O> child, ForeignKey<O, UserRecord> key) {
        super(child, key, USER);
    }

    @Override
    public Schema getSchema() {
        return Codewifi.CODEWIFI;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_OPENID);
    }

    @Override
    public Identity<UserRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER;
    }

    @Override
    public UniqueKey<UserRecord> getPrimaryKey() {
        return Keys.KEY_USER_PRIMARY;
    }

    @Override
    public List<UniqueKey<UserRecord>> getKeys() {
        return Arrays.<UniqueKey<UserRecord>>asList(Keys.KEY_USER_PRIMARY);
    }

    @Override
    public User as(String alias) {
        return new User(DSL.name(alias), this);
    }

    @Override
    public User as(Name alias) {
        return new User(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public User rename(String name) {
        return new User(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public User rename(Name name) {
        return new User(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<Integer, String, String, Byte, String, String, String, String, String, LocalDateTime, LocalDateTime, Byte> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
