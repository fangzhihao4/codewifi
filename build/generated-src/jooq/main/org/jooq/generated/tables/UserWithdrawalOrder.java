/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables;


import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.generated.Codewifi;
import org.jooq.generated.Keys;
import org.jooq.generated.tables.records.UserWithdrawalOrderRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserWithdrawalOrder extends TableImpl<UserWithdrawalOrderRecord> {

    private static final long serialVersionUID = -201397943;

    /**
     * The reference instance of <code>codewifi.user_withdrawal_order</code>
     */
    public static final UserWithdrawalOrder USER_WITHDRAWAL_ORDER = new UserWithdrawalOrder();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserWithdrawalOrderRecord> getRecordType() {
        return UserWithdrawalOrderRecord.class;
    }

    /**
     * The column <code>codewifi.user_withdrawal_order.id</code>.
     */
    public final TableField<UserWithdrawalOrderRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>codewifi.user_withdrawal_order.user_no</code>.
     */
    public final TableField<UserWithdrawalOrderRecord, String> USER_NO = createField(DSL.name("user_no"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>codewifi.user_withdrawal_order.money</code>.
     */
    public final TableField<UserWithdrawalOrderRecord, BigDecimal> MONEY = createField(DSL.name("money"), org.jooq.impl.SQLDataType.DECIMAL(10, 4).nullable(false), this, "");

    /**
     * The column <code>codewifi.user_withdrawal_order.status</code>. 1申请中 2处理中 3失败 4成功
     */
    public final TableField<UserWithdrawalOrderRecord, Byte> STATUS = createField(DSL.name("status"), org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "1申请中 2处理中 3失败 4成功");

    /**
     * The column <code>codewifi.user_withdrawal_order.create_date</code>.
     */
    public final TableField<UserWithdrawalOrderRecord, LocalDate> CREATE_DATE = createField(DSL.name("create_date"), org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>codewifi.user_withdrawal_order.create_time</code>.
     */
    public final TableField<UserWithdrawalOrderRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>codewifi.user_withdrawal_order.update_time</code>.
     */
    public final TableField<UserWithdrawalOrderRecord, LocalDateTime> UPDATE_TIME = createField(DSL.name("update_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * Create a <code>codewifi.user_withdrawal_order</code> table reference
     */
    public UserWithdrawalOrder() {
        this(DSL.name("user_withdrawal_order"), null);
    }

    /**
     * Create an aliased <code>codewifi.user_withdrawal_order</code> table reference
     */
    public UserWithdrawalOrder(String alias) {
        this(DSL.name(alias), USER_WITHDRAWAL_ORDER);
    }

    /**
     * Create an aliased <code>codewifi.user_withdrawal_order</code> table reference
     */
    public UserWithdrawalOrder(Name alias) {
        this(alias, USER_WITHDRAWAL_ORDER);
    }

    private UserWithdrawalOrder(Name alias, Table<UserWithdrawalOrderRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserWithdrawalOrder(Name alias, Table<UserWithdrawalOrderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> UserWithdrawalOrder(Table<O> child, ForeignKey<O, UserWithdrawalOrderRecord> key) {
        super(child, key, USER_WITHDRAWAL_ORDER);
    }

    @Override
    public Schema getSchema() {
        return Codewifi.CODEWIFI;
    }

    @Override
    public Identity<UserWithdrawalOrderRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_WITHDRAWAL_ORDER;
    }

    @Override
    public UniqueKey<UserWithdrawalOrderRecord> getPrimaryKey() {
        return Keys.KEY_USER_WITHDRAWAL_ORDER_PRIMARY;
    }

    @Override
    public List<UniqueKey<UserWithdrawalOrderRecord>> getKeys() {
        return Arrays.<UniqueKey<UserWithdrawalOrderRecord>>asList(Keys.KEY_USER_WITHDRAWAL_ORDER_PRIMARY);
    }

    @Override
    public UserWithdrawalOrder as(String alias) {
        return new UserWithdrawalOrder(DSL.name(alias), this);
    }

    @Override
    public UserWithdrawalOrder as(Name alias) {
        return new UserWithdrawalOrder(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserWithdrawalOrder rename(String name) {
        return new UserWithdrawalOrder(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserWithdrawalOrder rename(Name name) {
        return new UserWithdrawalOrder(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, BigDecimal, Byte, LocalDate, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
