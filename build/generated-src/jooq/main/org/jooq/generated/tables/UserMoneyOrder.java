/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables;


import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.generated.Codewifi;
import org.jooq.generated.Keys;
import org.jooq.generated.tables.records.UserMoneyOrderRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 用户收益记录流水
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserMoneyOrder extends TableImpl<UserMoneyOrderRecord> {

    private static final long serialVersionUID = 1651621470;

    /**
     * The reference instance of <code>codewifi.user_money_order</code>
     */
    public static final UserMoneyOrder USER_MONEY_ORDER = new UserMoneyOrder();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserMoneyOrderRecord> getRecordType() {
        return UserMoneyOrderRecord.class;
    }

    /**
     * The column <code>codewifi.user_money_order.id</code>.
     */
    public final TableField<UserMoneyOrderRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>codewifi.user_money_order.user_no</code>.
     */
    public final TableField<UserMoneyOrderRecord, String> USER_NO = createField(DSL.name("user_no"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>codewifi.user_money_order.type</code>. 1 wifi广告收益  2 下级wifi收益   3 下级邀请收益  4扣钱增加免费次数
     */
    public final TableField<UserMoneyOrderRecord, Byte> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "1 wifi广告收益  2 下级wifi收益   3 下级邀请收益  4扣钱增加免费次数");

    /**
     * The column <code>codewifi.user_money_order.price</code>. 广告价格
     */
    public final TableField<UserMoneyOrderRecord, BigDecimal> PRICE = createField(DSL.name("price"), org.jooq.impl.SQLDataType.DECIMAL(20, 4).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.0000", org.jooq.impl.SQLDataType.DECIMAL)), this, "广告价格");

    /**
     * The column <code>codewifi.user_money_order.user_profit</code>. 用户得到的收益
     */
    public final TableField<UserMoneyOrderRecord, BigDecimal> USER_PROFIT = createField(DSL.name("user_profit"), org.jooq.impl.SQLDataType.DECIMAL(20, 4).nullable(false), this, "用户得到的收益");

    /**
     * The column <code>codewifi.user_money_order.wifi_no</code>. wifi号码
     */
    public final TableField<UserMoneyOrderRecord, String> WIFI_NO = createField(DSL.name("wifi_no"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "wifi号码");

    /**
     * The column <code>codewifi.user_money_order.wifi_user_no</code>. wifi用户id

     */
    public final TableField<UserMoneyOrderRecord, String> WIFI_USER_NO = createField(DSL.name("wifi_user_no"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "wifi用户id\n");

    /**
     * The column <code>codewifi.user_money_order.create_date</code>.
     */
    public final TableField<UserMoneyOrderRecord, LocalDate> CREATE_DATE = createField(DSL.name("create_date"), org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>codewifi.user_money_order.create_time</code>.
     */
    public final TableField<UserMoneyOrderRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>codewifi.user_money_order.update_time</code>.
     */
    public final TableField<UserMoneyOrderRecord, LocalDateTime> UPDATE_TIME = createField(DSL.name("update_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>codewifi.user_money_order.add_time</code>. 增加wifi次数
     */
    public final TableField<UserMoneyOrderRecord, Integer> ADD_TIME = createField(DSL.name("add_time"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "增加wifi次数");

    /**
     * Create a <code>codewifi.user_money_order</code> table reference
     */
    public UserMoneyOrder() {
        this(DSL.name("user_money_order"), null);
    }

    /**
     * Create an aliased <code>codewifi.user_money_order</code> table reference
     */
    public UserMoneyOrder(String alias) {
        this(DSL.name(alias), USER_MONEY_ORDER);
    }

    /**
     * Create an aliased <code>codewifi.user_money_order</code> table reference
     */
    public UserMoneyOrder(Name alias) {
        this(alias, USER_MONEY_ORDER);
    }

    private UserMoneyOrder(Name alias, Table<UserMoneyOrderRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserMoneyOrder(Name alias, Table<UserMoneyOrderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("用户收益记录流水"), TableOptions.table());
    }

    public <O extends Record> UserMoneyOrder(Table<O> child, ForeignKey<O, UserMoneyOrderRecord> key) {
        super(child, key, USER_MONEY_ORDER);
    }

    @Override
    public Schema getSchema() {
        return Codewifi.CODEWIFI;
    }

    @Override
    public Identity<UserMoneyOrderRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_MONEY_ORDER;
    }

    @Override
    public UniqueKey<UserMoneyOrderRecord> getPrimaryKey() {
        return Keys.KEY_USER_MONEY_ORDER_PRIMARY;
    }

    @Override
    public List<UniqueKey<UserMoneyOrderRecord>> getKeys() {
        return Arrays.<UniqueKey<UserMoneyOrderRecord>>asList(Keys.KEY_USER_MONEY_ORDER_PRIMARY);
    }

    @Override
    public UserMoneyOrder as(String alias) {
        return new UserMoneyOrder(DSL.name(alias), this);
    }

    @Override
    public UserMoneyOrder as(Name alias) {
        return new UserMoneyOrder(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserMoneyOrder rename(String name) {
        return new UserMoneyOrder(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserMoneyOrder rename(Name name) {
        return new UserMoneyOrder(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, String, Byte, BigDecimal, BigDecimal, String, String, LocalDate, LocalDateTime, LocalDateTime, Integer> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
