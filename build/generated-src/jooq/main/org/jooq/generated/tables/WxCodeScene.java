/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables;


import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.generated.Codewifi;
import org.jooq.generated.Keys;
import org.jooq.generated.tables.records.WxCodeSceneRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WxCodeScene extends TableImpl<WxCodeSceneRecord> {

    private static final long serialVersionUID = 299716175;

    /**
     * The reference instance of <code>codewifi.wx_code_scene</code>
     */
    public static final WxCodeScene WX_CODE_SCENE = new WxCodeScene();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WxCodeSceneRecord> getRecordType() {
        return WxCodeSceneRecord.class;
    }

    /**
     * The column <code>codewifi.wx_code_scene.id</code>.
     */
    public final TableField<WxCodeSceneRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>codewifi.wx_code_scene.type</code>. 1wifi二维码
     */
    public final TableField<WxCodeSceneRecord, Integer> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "1wifi二维码");

    /**
     * The column <code>codewifi.wx_code_scene.user_no</code>.
     */
    public final TableField<WxCodeSceneRecord, String> USER_NO = createField(DSL.name("user_no"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>codewifi.wx_code_scene.wifi_no</code>.
     */
    public final TableField<WxCodeSceneRecord, String> WIFI_NO = createField(DSL.name("wifi_no"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>codewifi.wx_code_scene.create_date</code>.
     */
    public final TableField<WxCodeSceneRecord, LocalDate> CREATE_DATE = createField(DSL.name("create_date"), org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>codewifi.wx_code_scene.create_time</code>.
     */
    public final TableField<WxCodeSceneRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>codewifi.wx_code_scene.update_time</code>.
     */
    public final TableField<WxCodeSceneRecord, LocalDateTime> UPDATE_TIME = createField(DSL.name("update_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>codewifi.wx_code_scene.img_base</code>.
     */
    public final TableField<WxCodeSceneRecord, String> IMG_BASE = createField(DSL.name("img_base"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>codewifi.wx_code_scene</code> table reference
     */
    public WxCodeScene() {
        this(DSL.name("wx_code_scene"), null);
    }

    /**
     * Create an aliased <code>codewifi.wx_code_scene</code> table reference
     */
    public WxCodeScene(String alias) {
        this(DSL.name(alias), WX_CODE_SCENE);
    }

    /**
     * Create an aliased <code>codewifi.wx_code_scene</code> table reference
     */
    public WxCodeScene(Name alias) {
        this(alias, WX_CODE_SCENE);
    }

    private WxCodeScene(Name alias, Table<WxCodeSceneRecord> aliased) {
        this(alias, aliased, null);
    }

    private WxCodeScene(Name alias, Table<WxCodeSceneRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> WxCodeScene(Table<O> child, ForeignKey<O, WxCodeSceneRecord> key) {
        super(child, key, WX_CODE_SCENE);
    }

    @Override
    public Schema getSchema() {
        return Codewifi.CODEWIFI;
    }

    @Override
    public Identity<WxCodeSceneRecord, Integer> getIdentity() {
        return Keys.IDENTITY_WX_CODE_SCENE;
    }

    @Override
    public UniqueKey<WxCodeSceneRecord> getPrimaryKey() {
        return Keys.KEY_WX_CODE_SCENE_PRIMARY;
    }

    @Override
    public List<UniqueKey<WxCodeSceneRecord>> getKeys() {
        return Arrays.<UniqueKey<WxCodeSceneRecord>>asList(Keys.KEY_WX_CODE_SCENE_PRIMARY);
    }

    @Override
    public WxCodeScene as(String alias) {
        return new WxCodeScene(DSL.name(alias), this);
    }

    @Override
    public WxCodeScene as(Name alias) {
        return new WxCodeScene(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WxCodeScene rename(String name) {
        return new WxCodeScene(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WxCodeScene rename(Name name) {
        return new WxCodeScene(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, Integer, String, String, LocalDate, LocalDateTime, LocalDateTime, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
