/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables;


import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.generated.Codewifi;
import org.jooq.generated.Keys;
import org.jooq.generated.tables.records.UserInviteProfitRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 邀请奖励
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserInviteProfit extends TableImpl<UserInviteProfitRecord> {

    private static final long serialVersionUID = -163357772;

    /**
     * The reference instance of <code>codewifi.user_invite_profit</code>
     */
    public static final UserInviteProfit USER_INVITE_PROFIT = new UserInviteProfit();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserInviteProfitRecord> getRecordType() {
        return UserInviteProfitRecord.class;
    }

    /**
     * The column <code>codewifi.user_invite_profit.id</code>.
     */
    public final TableField<UserInviteProfitRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>codewifi.user_invite_profit.parent_user_no</code>. 父级用户no
     */
    public final TableField<UserInviteProfitRecord, String> PARENT_USER_NO = createField(DSL.name("parent_user_no"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "父级用户no");

    /**
     * The column <code>codewifi.user_invite_profit.register_user_no</code>. 注册用户no
     */
    public final TableField<UserInviteProfitRecord, String> REGISTER_USER_NO = createField(DSL.name("register_user_no"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "注册用户no");

    /**
     * The column <code>codewifi.user_invite_profit.register_name</code>. 注册人名称
     */
    public final TableField<UserInviteProfitRecord, String> REGISTER_NAME = createField(DSL.name("register_name"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "注册人名称");

    /**
     * The column <code>codewifi.user_invite_profit.type</code>. 1 直接邀请 2下级邀请
     */
    public final TableField<UserInviteProfitRecord, Byte> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "1 直接邀请 2下级邀请");

    /**
     * The column <code>codewifi.user_invite_profit.wifi_profit_price</code>. 注册人wifi分成奖励
     */
    public final TableField<UserInviteProfitRecord, BigDecimal> WIFI_PROFIT_PRICE = createField(DSL.name("wifi_profit_price"), org.jooq.impl.SQLDataType.DECIMAL(20, 6).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.000000", org.jooq.impl.SQLDataType.DECIMAL)), this, "注册人wifi分成奖励");

    /**
     * The column <code>codewifi.user_invite_profit.invite_profit_price</code>. 注册人下级邀请奖励
     */
    public final TableField<UserInviteProfitRecord, BigDecimal> INVITE_PROFIT_PRICE = createField(DSL.name("invite_profit_price"), org.jooq.impl.SQLDataType.DECIMAL(20, 6).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.000000", org.jooq.impl.SQLDataType.DECIMAL)), this, "注册人下级邀请奖励");

    /**
     * The column <code>codewifi.user_invite_profit.create_date</code>.
     */
    public final TableField<UserInviteProfitRecord, LocalDate> CREATE_DATE = createField(DSL.name("create_date"), org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>codewifi.user_invite_profit.create_time</code>.
     */
    public final TableField<UserInviteProfitRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>codewifi.user_invite_profit.update_time</code>.
     */
    public final TableField<UserInviteProfitRecord, LocalDateTime> UPDATE_TIME = createField(DSL.name("update_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * Create a <code>codewifi.user_invite_profit</code> table reference
     */
    public UserInviteProfit() {
        this(DSL.name("user_invite_profit"), null);
    }

    /**
     * Create an aliased <code>codewifi.user_invite_profit</code> table reference
     */
    public UserInviteProfit(String alias) {
        this(DSL.name(alias), USER_INVITE_PROFIT);
    }

    /**
     * Create an aliased <code>codewifi.user_invite_profit</code> table reference
     */
    public UserInviteProfit(Name alias) {
        this(alias, USER_INVITE_PROFIT);
    }

    private UserInviteProfit(Name alias, Table<UserInviteProfitRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserInviteProfit(Name alias, Table<UserInviteProfitRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("邀请奖励"), TableOptions.table());
    }

    public <O extends Record> UserInviteProfit(Table<O> child, ForeignKey<O, UserInviteProfitRecord> key) {
        super(child, key, USER_INVITE_PROFIT);
    }

    @Override
    public Schema getSchema() {
        return Codewifi.CODEWIFI;
    }

    @Override
    public Identity<UserInviteProfitRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_INVITE_PROFIT;
    }

    @Override
    public UniqueKey<UserInviteProfitRecord> getPrimaryKey() {
        return Keys.KEY_USER_INVITE_PROFIT_PRIMARY;
    }

    @Override
    public List<UniqueKey<UserInviteProfitRecord>> getKeys() {
        return Arrays.<UniqueKey<UserInviteProfitRecord>>asList(Keys.KEY_USER_INVITE_PROFIT_PRIMARY);
    }

    @Override
    public UserInviteProfit as(String alias) {
        return new UserInviteProfit(DSL.name(alias), this);
    }

    @Override
    public UserInviteProfit as(Name alias) {
        return new UserInviteProfit(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserInviteProfit rename(String name) {
        return new UserInviteProfit(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserInviteProfit rename(Name name) {
        return new UserInviteProfit(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, String, String, String, Byte, BigDecimal, BigDecimal, LocalDate, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
