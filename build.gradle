buildscript {
    repositories {
        maven {url "https://maven.aliyun.com/repository/gradle-plugin"}
    }
//	dependencies {
//		classpath("io.spring.javaformat:spring-javaformat-gradle-plugin:0.0.27")
//	}
}
plugins {
    id 'org.springframework.boot' version '2.3.10.RELEASE'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'nu.studer.jooq' version '5.2'
}

group = 'codewifi'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'


repositories {
    maven { url "https://maven.aliyun.com/repository/public/" }
    maven { url 'https://maven.aliyun.com/repository/central/' }
    flatDir {
        dirs 'lib'
    }
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation 'mysql:mysql-connector-java:8.0.20'
    implementation group: 'org.redisson', name: 'redisson', version: '3.13.6'
    implementation 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    implementation 'com.github.spotbugs:spotbugs-annotations:4.0.4'
    implementation 'com.alibaba:fastjson:1.2.73'
    implementation "org.apache.commons:commons-lang3:3.11"
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.66'
    implementation group: 'org.aspectj', name: 'aspectjrt', version: '1.9.6'
    implementation 'javax.activation:activation:1.1.1'
    testImplementation ('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage',module: 'junit-vintage-engine'
    }
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.4.6'
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '3.4.6'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.4.6'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.mybatis:mybatis-typehandlers-jsr310:1.0.2'
    implementation 'com.google.guava:guava:30.0-jre'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.4'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    implementation 'com.auth0:java-jwt:3.13.0'
    implementation 'org.apache.velocity:velocity-engine-core:2.3'
    implementation 'cn.hutool:hutool-crypto:5.6.0'
    implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'
    implementation group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '2.1.4'
    implementation group: 'org.mybatis.generator', name: 'mybatis-generator-core', version: '1.4.0'
    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '6.6'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.11.4'
    implementation 'org.jooq:jooq-meta:3.14.4'
    implementation 'org.jooq:jooq-codegen:3.14.4'
    jooqGenerator 'mysql:mysql-connector-java'
    implementation group: 'cn.hutool', name: 'hutool-all', version: '5.8.5'

    //修复安全检查
    implementation 'io.netty:netty-codec:4.1.70.Final'
    //修复安全检查
    implementation 'org.bouncycastle:bcprov-jdk15on:1.68'
    //修复安全检查
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: '2.17.1'
    implementation 'org.java-websocket:Java-WebSocket:1.5.1'

    //腾讯机器人
    implementation 'com.tencentcloudapi:tencentcloud-sdk-java:3.1.552'

    //upyun
    compile 'com.upyun:java-sdk:4.2.3'

    //七牛云
    compile 'com.qiniu:qiniu-java-sdk:[7.7.0, 7.10.99]'



    //implementation group: 'com.alibaba.cloud', name: 'spring-cloud-starter-alibaba-nacos-config', version: '2.2.5.RELEASE'

}

//apply plugin: 'io.spring.javaformat'
apply plugin: "jacoco"

bootRun {
    systemProperties System.properties
    jvmArgs = ["-Xmx512m", "-Xms512m", "-Djava.net.preferIPv6Addresses=false", "-Djava.net.preferIPv4Stack=true"]
}
test {
    useJUnitPlatform()
    testLogging {
        events "PASSED", "STARTED", "FAILED", "SKIPPED"
    }
    doFirst {
        systemProperty 'spring.profiles.active', System.getProperty("spring.profiles.active")
        systemProperty 'tls.enable', true;
    }
}

//compileJava.dependsOn checkFormat
//tasks.withType(io.spring.javaformat.gradle.FormatTask) {
//	exclude "**/*/*/constant/enums/*.java"
//}
//tasks.withType(io.spring.javaformat.gradle.CheckTask) {
//	exclude "**/*/*/constant/enums/*.java"
//}


jooq {
    // use jOOQ version defined in Spring Boot
    version = dependencyManagement.importedProperties['jooq.version']
    edition = nu.studer.gradle.jooq.JooqEdition.OSS

    configurations {
        main {
            generationTool {
                logging = org.jooq.meta.jaxb.Logging.INFO
                jdbc {
                    driver = 'com.mysql.cj.jdbc.Driver'
                    url = 'jdbc:mysql://127.0.0.1:3306/codewifi?useUnicode=true'
                    user = 'root'
                    password = '123456'
                    properties {

                    }
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.mysql.MySQLDatabase'
                        inputSchema = 'codewifi'
                        includes = '.*'
                        excludes = ''
                    }
                    strategy.name = "org.jooq.codegen.DefaultGeneratorStrategy"
                }
            }
        }
    }
}

